# DFS (Depth-First Search)
# 깊이 우선 탐색 : 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘
# 스택 자료구조 또는 재귀함수를 이용한다
# 1. 탐색 시작 노드를 스택에 삽입 후 방문 처리 -> 방문기준 : 번호가 낮은 인접 노드부터라고 가정
# 2. 스택의 최상단 노드에 방문하지않은 가까운 노드 1개라도 있으면
#    그 노드를 스택에 삽입 후 방문
#    다 방문했으면 최상단 노드를 꺼낸다
# 3. 더 이상 2번의 과정을 수행 ㄴㄴ까지 반복

# DFS 메서드 정의
def dfs(graph, v, visited):
    # 현재 노드를 방문 처리
    visited[v] = True
    print(v, end=' ')
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]:
            dfs(graph, i, visited)

# 각 노드가 연결된 정보를 표현 (2차원 리스트)
graph = [
    [], # 노드 번호가 1번부터 시작되므로 0번 비워놓기
    [2,3,8],
    [1,7],
    [1,4,5],
    [3,5],
    [3,4],
    [7],
    [2,6,8],
    [1,7]
]

# 각 노드가 방문된 정보를 표현 (1차원 리스트)
visited = [False] * 9 # 처음에 모든 노드를 방문하지않게 False
# print('dddd', visited) 배열 9개 모두 False로 초기화해 생성된다

# 정의된 DFS 함수 호출
dfs(graph, 1, visited)