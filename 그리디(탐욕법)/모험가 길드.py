# 모험가 N명, 공포도가 X인 모험가는 X명 이상으로 구성한 모험가 그룹에 참여해야함
# 여행을 떠날 수 있는 그룹 수의 최댓값을 구하는 프로그램을 작성
# 몇 명의 모험가는 마을에 그대로 남아 있어도 됨
n = int(input())
data = list(map(int, input().split()))
data.sort()
# 오름차순 정렬 이후에 공포도가 가장 낮은 모험가부터 하나씩 확인
# 앞에서부터 공포도 하나씩 확인
# '현재 그룹에 포함된 모험가의 수'가 '현재 확인하고 있는 공포도'보다 크거나 같다면 이를 그룹으로 설정
# 항상 최소한의 모험가의 수만 포함하여 그룹을 결성하게 됨
result = 0 # 총 그룹의 수
count = 0 # 현재 그룹에 포함된 모험가의 수

for i in data: # 공포도를 낮은 것부터 하나씩 확인하며
    count += 1 # 현재 그룹에 해당 모험가를 포함시키기
    if count >= i: # 현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이라면, 그룹 결성
        result += 1 # 총 그룹의 수 증가시키기
        count = 0 # 현재 그룹에 포함된 모험가의 수 초기화

print(result)